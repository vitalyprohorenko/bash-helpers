#!/bin/bash
##
# ============================================================================
# Основные настройки
_logFile="logfile.txt"				# Имя файла для записи логов
_logPrefix=" "					# Префикс сообщений
_logDefault=stdout				# Стандартный поток file или stdout
# ============================================================================

## Потоки вывода для функции
##   f|file				- запись данных в файл из настройки _logFile
##   s|stdout				- вывод на экран
##

## Запись сообщения в файл или вывод на экран
##   log [-c] [-o|-d|-n|-p] "string"
##     -c|-clear [dst]			- очистить dst поток вывода функции либо очистить поток по умолчанию
##     -o|-out [dst] 			- поток вывода, если не указан поток - используется stdout
##     -d|-date				- убрать из вывода дату
##     -n|-newline			- не выводить \n в конце сообщения
##     -p|-prefix			- не выводить префикс
##     "string"				- сообщение
##
function log() {
local _logMsg=""; local _logLine="\n"
local _logDate="$(date "+%Y-%m-%d %H:%M:%S")"
local _logStd="$_logDefault"

if [ "$1" == "-c" ] || [ "$1" == "-clear" ]; then if $_logStd
  then clear; return
  else echo -n "" >$_logFile; return
fi;fi

while true; do
  case "$1" in
    "-d"|"-date") shift; _logDate="";;
    "-n"|"-newline") shift; _logLine="";;
    "-p"|"-prefix") shift; _logPrefix="";;
    "-o"|"-out")
      if [[ "$2" =~ ^(f|file|s|stdout)$ ]]
        then shift 2; _logStd="$2"
        else shift; _logStd="stdout"
      fi
    ;;
    *)
      case $_logStd in
        "f"|"file") echo -ne "${_logDate}${_logPrefix}${*}${_logLine}" >>$_logFile;;
        "s"|"stdout"|*) echo -ne "${_logDate}${_logPrefix}${*}${_logLine}";;
        #*) echo -ne "${_logDate}${_logPrefix}${*}${_logLine}";;
      esac
      break
    ;;
  esac
done
}